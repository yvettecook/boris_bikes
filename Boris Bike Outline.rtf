{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 Version 0 : \
Write domain model. Define classes\'92 responsibilities and interactions\
? Also write out methods (verbs!)\
\
We are building a system that manages bikes that can be rented by users from docking stations and returned there at the end of the rental. The bikes can break while being used, in which case they will not be available for rental after they are returned. There is a garage that can fix broken bikes. A van is used to move broken bikes from the stations to the garage. It can also be used to take fixed bikes back to the station(s). The van, all stations and the garage have fixed capacity, so they cannot take more bikes that they can hold.\
\
Version 1:  \
Make project directory\
Write test and define \'91bike\'92 with broken attribute\
Write method to fix the bike\
\
Version 2:\
Refactor lib + spec files\
\
Version 3:\
Define docking station that accepts (docks) bikes\
Write method to release bike\
Add capacity limit to docking station\
	in initialiser and full? method\
	should not accept bikes if full\
\
\
\
}